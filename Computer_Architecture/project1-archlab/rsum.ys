# name: 
# ID  : 
# rsum.ys
    .pos 0
init:
    irmovl Stack, %esp
    irmovl Stack, %ebp
    call Main
    halt
# Sample linked list
    .align 4 
ele1:
    .long 0x00a
    .long ele2
ele2:
    .long 0x0b0
    .long ele3
ele3:
    .long 0xc00
    .long 0

Main:   pushl %ebp 
    rrmovl %esp, %ebp
    irmovl ele1,%edx
    pushl %edx 
    call rsum                   # rsum(*head)
    rrmovl %ebp,%esp 
    popl %ebp 
    ret


rsum:   pushl %ebp
    rrmovl %esp, %ebp
    mrmovl 8(%ebp), %ecx        # %ecx <- head
    xorl %edx, %edx             # set zero
    andl %ecx, %ecx
    je ZERO

    mrmovl (%ecx), %edx         # %edx <- *head
    pushl %edx                  # store the value
    
    pushl %ebp 
    rrmovl %esp,%ebp
    mrmovl 4(%ecx), %ecx
    pushl %ecx
    call rsum                   # rsum(head->next)
    rrmovl %ebp, %esp
    popl %ebp

    popl %edx                   # get the previous value
ZERO:   rrmovl %ebp, %esp
    popl %ebp 
    addl %edx, %eax             # add the value to the return value,namely %eax
    ret
    .pos 0x200
Stack:
